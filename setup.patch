--- setup.py.orig	2012-01-04 00:33:37.000000000 +0100
+++ setup.py	2012-02-23 19:06:30.307604144 +0100
@@ -34,14 +34,13 @@
 	# this is a workaround for Unity bug https://bugs.launchpad.net/unity/+bug/803664
 	packname = normal_packname.replace("-", "_")
 	"""Creates desktop file for a screenlet"""
-	name = podir.lower() + "-screenlet"
+	name = "screenlet-"+ podir.lower()
 	os.system('mkdir -p ' + genpath % packname)
 	if len(icon_addition)>0:
 		real_icon_addition=icon_addition % normal_packname
 	else:
 		real_icon_addition=""
 	write_file((genpath % packname) + ("/%s.desktop" % name), (desktop_file % (podir, packname, podir, podir)) + real_icon_addition)
-	os.system('chmod a+x ' + (genpath % packname) + "/*")
 	files_list.append ((destpath % packname, [(genpath % packname) + ("/%s.desktop" % name)] ))
 
 def write_file(path, contents):
@@ -99,88 +98,37 @@
 
 # - screenlets-subdirs and all their data go into PREFIX/<name>/...
 all_dirlist		= scan_dir_list(['src'])
-all_files_list	= make_file_list(all_dirlist, 'share/screenlets/screenlets-pack-all', 
-	strip='src/')	# to strip this string from filenames
-
-basic_screenlets = [
-	# we don't add random screenlets, less is better
-	# we should add just one screenlet for each function (if possible)
-	# the one which is most usable for general public
-	# we should remove screenlets which do not work
-	#
-	# if there are too many basic screenlets, it's annoying for the new user
-	#
-	# usual desktop stuff
-	'src/Ruler', # pixel ruler
-	'src/Lipik', # sticky notes
-	'src/Clock', # do we need also digital or text based?
-	'src/Trash', # Trashbin
-	'src/Calc', # Calculator
-	'src/ClearCalendar', # calendar with some ics ability
-	'src/Stocks', # shows stock market data
-	'src/FolderView', # it may be not too usable, but still basic
-	
-	# music/audio related stuff
-	'src/NowPlaying', # Shows info for song currently playing
-	'src/Lyrics', # Querys and shows lyrics for songs while playing
-	
-	# just visual candy, there has to be some
-	'src/Flower', # some digital nature
-	'src/Sticker', # we are for the Linux (Tux Screenlet would be fun too)
-	
-	# data from web
-	'src/MailCheck', # IMAP and gmail
-	'src/Slideshow', # Media RSS, Flickr, folder on disk
-	'src/ClearRss', # Text RSS
-	'src/Webframe', # Simple web browser for web apps
-	
-	# weather, by now only one option
-	# ClearWeather removed because of https://bugs.launchpad.net/indiv-screenlets/+bug/834615
-	'src/FreemeteoWeather', # source: freemeteo.com
-	
-	# system sensors
-	'src/Meter', # bar meter
-	'src/Sensors', # vertical graph and time graph
-	'src/Sysmonitor', # various indicators
-	
-#	'src/',
-	]
-	
-basic_dirlist		= scan_dir_list(basic_screenlets, addself=True)
-
-basic_files_list	= make_file_list(basic_dirlist, 'share/screenlets/screenlets-pack-basic', 
+all_files_list	= make_file_list(all_dirlist, 'share/screenlets', 
 	strip='src/')	# to strip this string from filenames
 
 # Install translation files
 buildcmd = "msgfmt -o build/locale/%s/LC_MESSAGES/%s.mo %s/%s.po"
 mopath = "build/locale/%s/LC_MESSAGES/%s.mo"
-destpath = "share/screenlets/%s/%s/mo/%s/LC_MESSAGES"
+destpath = "share/screenlets/%s/mo/%s/LC_MESSAGES"
 for podir in os.listdir("src"):
 	full_po_path = "src/"+podir+"/po"
 	if os.path.exists(full_po_path):
 		for name in os.listdir (full_po_path):
 			if name.endswith('.po'):
 				dname = name.split('.')[0]
-				name = podir.lower() + "-screenlet"
+				name = "screenlet-"+podir.lower()
 				if sys.argv[1] == "build" or sys.argv[1] == "install":
 					print 'Creating language Binary for : ' + name
 					if not os.path.isdir ("build/locale/%s/LC_MESSAGES" % dname):
 						os.makedirs ("build/locale/%s/LC_MESSAGES" % dname)
 					os.system (buildcmd % (dname, name, full_po_path, dname))
-					all_files_list.append ((destpath % ("screenlets-pack-all", podir, dname), [mopath % (dname,name)]))
-					if "src/"+podir in basic_screenlets:
-						basic_files_list.append ((destpath % ("screenlets-pack-basic", podir, dname), [mopath % (dname,name)]))
-
+					all_files_list.append ((destpath % (podir, dname), [mopath % (dname,name)]))
 # Generate and install desktop files
 desktop_file = """[Desktop Entry]
 Name=%s
 Encoding=UTF-8
 Version=1.0
 Type=Application
-Exec= python -u /usr/share/screenlets/%s/%s/%sScreenlet.py
+Categories=Screenlets
+Exec= python2 -u /usr/share/screenlets/%s/%s/%sScreenlet.py
 """
-destpath = "share/applications/%s"
-genpath = "build/applications/%s"
+destpath = "share/applications%s"
+genpath = "build/applications%s"
 for podir in os.listdir("src"):
 	try:
 		icon_addition = ""
@@ -191,18 +139,14 @@
 			icon = "icon.png"
 		if icon is not None:
 			icon_addition = "Icon=/usr/share/screenlets/%s/%s/%s" % ("%s", podir, icon)
-		create_desktop_file(genpath, destpath, podir, desktop_file, icon_addition, "screenlets-pack-all", all_files_list)
-		if "src/"+podir in basic_screenlets:
-			create_desktop_file(genpath, destpath, podir, desktop_file, icon_addition, "screenlets-pack-basic", basic_files_list)
+		create_desktop_file(genpath, destpath, podir, desktop_file, icon_addition, "", all_files_list)
 	except:
 		traceback.print_exc()
 		print "Error generating desktop file: " + podir
 		exit(-1)
-#exit(-1)
 
-#print basic_files_list
 
-setup(name = 'screenlets-pack-all',
+setup(name = 'screenlets-pack',
 	version			= VERSION,
 	author			= 'Guido Tabbernuk',
 	author_email	= 'boamaod@gmail.com',
@@ -212,13 +156,3 @@
 	data_files		= all_files_list
 	)
 
-setup(name = 'screenlets-pack-basic',
-	version			= VERSION,
-	author			= 'Guido Tabbernuk',
-	author_email	= 'boamaod@gmail.com',
-	url				= 'http://www.screenlets.org',
-	license			= 'GPL v3',
-	description		= 'Package containing only basic screenlets.',
-	data_files		= basic_files_list
-	)
-
